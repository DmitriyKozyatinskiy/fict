{"version":3,"sources":["constants.js","api.js","utils/http.js","utils/dataConvertor.js","utils/files.js","components/K3TableRow/index.js","utils/calculator.js","containers/K3Table/index.js","App.js","registerServiceWorker.js","index.js"],"names":["console","log","process","API_ENDPOINTS","API","exportK3","_ref","values","url","_ref$method","method","body","fetch","JSON","stringify","headers","Content-Type","then","response","ok","contentType","get","includes","json","Promise","resolve","Error","statusText","catch","error","message","sendRequest","concat","convertK3Data","data","map","row","i","faculty","discipline","course","groups","disciplineTotal","lectureHours","practiseHours","labHours","exams","credits","tests","courseProjects","courseWorks","RGRs","DKRs","essays","budgetGroups","practiceSubGroups","labSubGroups","contractGroups","bStudents","kStudents","bkStudents","kkStudents","flows","join","downloadExcelFileFromBase64","base64Data","downloadURL","window","open","K3TableRow","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","num","lecturesLoad","toFixed","getLecturesLoad","practicesLoad","labsLoad","examsLoad","creditsLoad","testsLoad","courseProjectsLoad","courseWorksLoad","RGRLoad","DKRLoad","essaysLoad","consultationsLoad","totalLoad","react_default","a","createElement","Table","Row","Cell","K3Table","state","sortField","sortType","onExport","_this$state","_this","sortedData","sort","rowA","rowB","onSort","fieldName","setState","_this2","this","Button","onClick","id","celled","structured","Header","HeaderCell","rowSpan","colSpan","Body","components_K3TableRow","Object","assign","key","Component","App","containers_K3Table","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ed9ce6a8.chunk.js","sourcesContent":["console.log('ENV: ', process.env.NODE_ENV);\r\n\r\nexport const API_URL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? 'https://serene-fjord-66759.herokuapp.com/api'\r\n    : 'http://localhost:3002/api';\r\n\r\nexport const API_ENDPOINTS = {\r\n  K3: '/k3'\r\n};\r\n\r\nexport const XLSX_MIME_TYPE =\r\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\r\n","import { API_URL, API_ENDPOINTS } from './constants';\r\nimport { sendRequest } from './utils/http';\r\n\r\nexport const API = {\r\n  exportK3({ values }) {\r\n    return sendRequest({\r\n      url: `${API_URL}${API_ENDPOINTS.K3}`,\r\n      method: 'POST',\r\n      body: { values }\r\n    });\r\n  }\r\n};\r\n","export const sendRequest = ({ url, method = 'GET', body }) =>\r\n  fetch(url, {\r\n    method,\r\n    body: body ? JSON.stringify(body) : null,\r\n    // credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        const contentType = response.headers.get('content-type');\r\n        const isJSON = contentType && contentType.includes('application/json');\r\n        return isJSON ? response.json() : Promise.resolve();\r\n      } else {\r\n        throw new Error(response.statusText);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error: ', error.message);\r\n      throw new Error(error.message);\r\n    });\r\n","export const convertK3Data = data =>\r\n  data.map((row, i) => {\r\n    const {\r\n      faculty,\r\n      discipline,\r\n      course,\r\n      groups,\r\n      disciplineTotal,\r\n      lectureHours,\r\n      practiseHours,\r\n      labHours,\r\n      exams,\r\n      credits,\r\n      tests,\r\n      courseProjects,\r\n      courseWorks,\r\n      RGRs,\r\n      DKRs,\r\n      essays,\r\n      budgetGroups,\r\n      practiceSubGroups,\r\n      labSubGroups,\r\n      contractGroups,\r\n      bStudents,\r\n      kStudents,\r\n      bkStudents,\r\n      kkStudents,\r\n      flows\r\n    } = row;\r\n    const generalInfo = `${faculty} ${discipline} ${course} курс ${groups.join(\r\n      ', '\r\n    )}`;\r\n\r\n    return [\r\n      i + 1,\r\n      generalInfo,\r\n      disciplineTotal,\r\n      lectureHours,\r\n      practiseHours,\r\n      labHours,\r\n      exams,\r\n      credits,\r\n      tests,\r\n      courseProjects,\r\n      courseWorks,\r\n      RGRs,\r\n      DKRs,\r\n      essays,\r\n      budgetGroups,\r\n      practiceSubGroups,\r\n      labSubGroups,\r\n      contractGroups,\r\n      bStudents,\r\n      kStudents,\r\n      bkStudents,\r\n      kkStudents,\r\n      flows\r\n    ];\r\n  });\r\n","import { XLSX_MIME_TYPE } from './../constants';\r\n\r\nexport const downloadExcelFileFromBase64 = base64Data => {\r\n  const downloadURL = `data:${XLSX_MIME_TYPE};base64,${base64Data}`;\r\n  window.open(downloadURL, '_blank');\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nimport {\n  getLecturesLoad,\n  getPracticesLoad,\n  getLabsLoad,\n  getExamsLoad,\n  getCreditsLoad,\n  getTestsLoad,\n  getCourseProjectsLoad,\n  getCourseWorksLoad,\n  getRGRLoad,\n  getDKRLoad,\n  getEssaysLoad,\n  getConsultationsLoad,\n  getTotalLoad\n} from './../../utils/calculator';\n\nconst K3TableRow = ({\n  num,\n  faculty,\n  course,\n  discipline,\n  disciplineTotal,\n  lectureHours,\n  practiseHours,\n  labHours,\n  exams,\n  credits,\n  tests,\n  courseProjects,\n  courseWorks,\n  RGRs,\n  DKRs,\n  essays,\n  budgetGroups,\n  practiceSubGroups,\n  labSubGroups,\n  contractGroups,\n  flows,\n  bStudents,\n  kStudents,\n  bkStudents,\n  kkStudents\n}) => {\n  const lecturesLoad = getLecturesLoad({ lectureHours, flows });\n  const practicesLoad = getPracticesLoad({ practiseHours, practiceSubGroups });\n  const labsLoad = getLabsLoad({ labHours, labSubGroups });\n  const examsLoad = getExamsLoad({ exams, bStudents, bkStudents });\n  const creditsLoad = getCreditsLoad({ budgetGroups, credits });\n  const testsLoad = getTestsLoad({ tests, bStudents, bkStudents });\n  const courseProjectsLoad = getCourseProjectsLoad({\n    courseProjects,\n    bStudents,\n    bkStudents\n  });\n  const courseWorksLoad = getCourseWorksLoad({\n    courseWorks,\n    bStudents,\n    bkStudents\n  });\n  const RGRLoad = getRGRLoad({ RGRs, bStudents, bkStudents });\n  const DKRLoad = getDKRLoad({ DKRs, bStudents, bkStudents });\n  const essaysLoad = getEssaysLoad({ essays, bStudents, bkStudents });\n  const consultationsLoad = getConsultationsLoad({\n    exams,\n    budgetGroups,\n    disciplineTotal,\n    bStudents,\n    bkStudents\n  });\n  const totalLoad = getTotalLoad({\n    lecturesLoad,\n    practicesLoad,\n    labsLoad,\n    examsLoad,\n    creditsLoad,\n    testsLoad,\n    courseProjectsLoad,\n    courseWorksLoad,\n    RGRLoad,\n    DKRLoad,\n    essaysLoad,\n    consultationsLoad\n  });\n\n  return (\n    <Table.Row>\n      <Table.Cell>{num}</Table.Cell>\n      <Table.Cell>\n        {faculty}\n        <br />\n        {discipline}\n        <br />\n        {course} курс\n      </Table.Cell>\n      <Table.Cell>{disciplineTotal}</Table.Cell>\n      <Table.Cell>{lectureHours}</Table.Cell>\n      <Table.Cell>{practiseHours}</Table.Cell>\n      <Table.Cell>{labHours}</Table.Cell>\n      <Table.Cell>{exams}</Table.Cell>\n      <Table.Cell>{credits}</Table.Cell>\n      <Table.Cell>{tests}</Table.Cell>\n      <Table.Cell>{courseProjects}</Table.Cell>\n      <Table.Cell>{courseWorks}</Table.Cell>\n      <Table.Cell>{RGRs}</Table.Cell>\n      <Table.Cell>{DKRs}</Table.Cell>\n      <Table.Cell>{essays}</Table.Cell>\n      <Table.Cell>{budgetGroups}</Table.Cell>\n      <Table.Cell>{practiceSubGroups}</Table.Cell>\n      <Table.Cell>{labSubGroups}</Table.Cell>\n      <Table.Cell>{contractGroups}</Table.Cell>\n      <Table.Cell>{bStudents}</Table.Cell>\n      <Table.Cell>{kStudents}</Table.Cell>\n      <Table.Cell>{bkStudents}</Table.Cell>\n      <Table.Cell>{kkStudents}</Table.Cell>\n      <Table.Cell>{flows}</Table.Cell>\n\n      <Table.Cell>{lecturesLoad}</Table.Cell>\n      <Table.Cell>{practicesLoad}</Table.Cell>\n      <Table.Cell>{labsLoad}</Table.Cell>\n      <Table.Cell>{examsLoad}</Table.Cell>\n      <Table.Cell>{creditsLoad}</Table.Cell>\n      <Table.Cell>{testsLoad}</Table.Cell>\n      <Table.Cell>{courseProjectsLoad}</Table.Cell>\n      <Table.Cell>{courseWorksLoad}</Table.Cell>\n      <Table.Cell>{RGRLoad}</Table.Cell>\n      <Table.Cell>{DKRLoad}</Table.Cell>\n      <Table.Cell>{essaysLoad}</Table.Cell>\n      <Table.Cell>{consultationsLoad}</Table.Cell>\n      <Table.Cell>{totalLoad}</Table.Cell>\n    </Table.Row>\n  );\n};\n\nK3TableRow.propTypes = {\n  num: PropTypes.number.isRequired,\n  faculty: PropTypes.string.isRequired,\n  course: PropTypes.number.isRequired,\n  discipline: PropTypes.string.isRequired,\n  disciplineTotal: PropTypes.number.isRequired,\n  lectureHours: PropTypes.number.isRequired,\n  practiseHours: PropTypes.number.isRequired,\n  labHours: PropTypes.number.isRequired,\n  exams: PropTypes.number.isRequired,\n  credits: PropTypes.number.isRequired,\n  tests: PropTypes.number.isRequired,\n  courseProjects: PropTypes.number.isRequired,\n  courseWorks: PropTypes.number.isRequired,\n  RGRs: PropTypes.number.isRequired,\n  DKRs: PropTypes.number.isRequired,\n  essays: PropTypes.number.isRequired,\n  budgetGroups: PropTypes.number.isRequired,\n  practiceSubGroups: PropTypes.number.isRequired,\n  labSubGroups: PropTypes.number.isRequired,\n  contractGroups: PropTypes.number.isRequired,\n  flows: PropTypes.number.isRequired,\n  bStudents: PropTypes.number.isRequired,\n  kStudents: PropTypes.number.isRequired,\n  bkStudents: PropTypes.number.isRequired,\n  kkStudents: PropTypes.number.isRequired\n};\n\nexport default K3TableRow;\n","// Л * P\nexport const getLecturesLoad = ({ lectureHours, flows }) =>\n  +(lectureHours * flows).toFixed(2);\n\n// П * ГП\nexport const getPracticesLoad = ({ practiseHours, practiceSubGroups }) =>\n  +(practiseHours * practiceSubGroups).toFixed(2);\n\n// L * ГL\nexport const getLabsLoad = ({ labHours, labSubGroups }) =>\n  +(labHours * labSubGroups).toFixed(2);\n\n// 0.33 * E * (Б + БК)\nexport const getExamsLoad = ({ exams, bStudents, bkStudents }) =>\n  +(0.33 * exams * (bStudents + bkStudents)).toFixed(2);\n\n// 2 * Г * Z\nexport const getCreditsLoad = ({ budgetGroups, credits }) =>\n  +(2 * budgetGroups * credits).toFixed(2);\n\n// 0.25 * M * (Б + БК)\nexport const getTestsLoad = ({ tests, bStudents, bkStudents }) =>\n  +(0.25 * tests * (bStudents + bkStudents)).toFixed(2);\n\n// Q * (Б + БК)\nexport const getCourseProjectsLoad = ({ courseProjects, bStudents, bkStudents }) =>\n  +(courseProjects * (bStudents + bkStudents)).toFixed(2);\n\n// G * (Б + БК)\nexport const getCourseWorksLoad = ({ courseWorks, bStudents, bkStudents }) =>\n  +(courseWorks * (bStudents + bkStudents)).toFixed(2);\n\n// 0.5 * R * (Б + БК)\nexport const getRGRLoad = ({ RGRs, bStudents, bkStudents }) =>\n  +(0.5 * RGRs * (bStudents + bkStudents)).toFixed(2);\n\n// 0.33 * D * (Б + БК)\nexport const getDKRLoad = ({ DKRs, bStudents, bkStudents }) =>\n  +(0.33 * DKRs * (bStudents + bkStudents)).toFixed(2);\n\n// 0.25 * F * (Б + БК)\nexport const getEssaysLoad = ({ essays, bStudents, bkStudents }) =>\n  +(0.25 * essays * (bStudents + bkStudents)).toFixed(2);\n\n// 2 * E * Г * 0.06 * N * (Б + БК) / 25\nexport const getConsultationsLoad = ({ exams, budgetGroups, disciplineTotal, bStudents, bkStudents }) =>\n  +(2 * exams * budgetGroups * 0.06 * disciplineTotal * (bStudents + bkStudents) / 25).toFixed(2);\n\n\nexport const getTotalLoad =\n  ({\n     lecturesLoad,\n     practicesLoad,\n     labsLoad,\n     examsLoad,\n     creditsLoad,\n     testsLoad,\n     courseProjectsLoad,\n     courseWorksLoad,\n     RGRLoad,\n     DKRLoad,\n     essaysLoad,\n     consultationsLoad\n   }) =>\n    lecturesLoad\n    + practicesLoad\n    + labsLoad\n    + examsLoad\n    + creditsLoad\n    + testsLoad\n    + courseProjectsLoad\n    + courseWorksLoad\n    + RGRLoad\n    + DKRLoad\n    + essaysLoad\n    + consultationsLoad;","import React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\n\nimport { API } from './../../api';\nimport data from './../../json/data';\nimport { convertK3Data } from './../../utils/dataConvertor';\nimport { downloadExcelFileFromBase64 } from './../../utils/files';\n\nimport K3TableRow from './../../components/K3TableRow';\n\nclass K3Table extends Component {\n  state = {\n    data,\n    sortField: null,\n    sortType: 'asc'\n  };\n\n  onExport = () => {\n    const { data, sortType, sortField } = this.state;\n    const sortedData = sortField\n      ? data.sort(\n          (rowA, rowB) =>\n            sortType === 'desc'\n              ? rowA[sortField] - rowB[sortField]\n              : rowB[sortField] - rowA[sortField]\n        )\n      : data;\n    const values = convertK3Data(sortedData);\n    API.exportK3({ values }).then(({ data }) =>\n      downloadExcelFileFromBase64(data)\n    );\n  };\n\n  onSort = fieldName =>\n    this.setState(({ data, sortField, sortType }) => ({\n      sort: fieldName,\n      sortType: sortType === 'asc' ? 'desc' : 'asc',\n      data: data.sort(\n        (rowA, rowB) =>\n          sortType === 'asc'\n            ? rowA[fieldName] - rowB[fieldName]\n            : rowB[fieldName] - rowA[fieldName]\n      )\n    }));\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.onExport}>Export to excel</Button>\n        <Table id=\"k3Table\" celled structured>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell rowSpan=\"3\">#</Table.HeaderCell>\n              <Table.HeaderCell\n                rowSpan=\"3\"\n                onClick={() => this.onSort('course')}\n              >\n                Факультет\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                rowSpan=\"3\"\n                onClick={() => this.onSort('disciplineTotal')}\n              >\n                Обсяг дисципліни\n              </Table.HeaderCell>\n              <Table.HeaderCell rowSpan=\"2\" colSpan=\"3\">\n                Аудиторні заняття\n              </Table.HeaderCell>\n              <Table.HeaderCell rowSpan=\"2\" colSpan=\"8\">\n                Контр.заходи\n              </Table.HeaderCell>\n              <Table.HeaderCell colSpan=\"4\">К-ть груп</Table.HeaderCell>\n              <Table.HeaderCell colSpan=\"4\">К-ть студ.</Table.HeaderCell>\n              <Table.HeaderCell\n                rowSpan=\"3\"\n                onClick={() => this.onSort('flows')}\n              >\n                К-ть бюдж.потоків\n              </Table.HeaderCell>\n              <Table.HeaderCell rowSpan=\"2\" colSpan=\"12\">\n                РНН\n              </Table.HeaderCell>\n              <Table.HeaderCell rowSpan=\"3\">Всього</Table.HeaderCell>\n            </Table.Row>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"3\">Бюджетні</Table.HeaderCell>\n              <Table.HeaderCell rowSpan=\"2\">Академ.контр.</Table.HeaderCell>\n              <Table.HeaderCell colSpan=\"2\">Бюдж.гр.</Table.HeaderCell>\n              <Table.HeaderCell colSpan=\"2\">Контр.гр.</Table.HeaderCell>\n            </Table.Row>\n            <Table.Row>\n              <Table.HeaderCell onClick={() => this.onSort('lectureHours')}>\n                Лекції\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('practiseHours')}>\n                Практ.\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('labHours')}>\n                Лабор.\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('exams')}>\n                Екзамени\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('credits')}>\n                Заліки\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('tests')}>\n                Контр.роб.\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('courseProjects')}>\n                Курсові пр.\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('courseWorks')}>\n                Курсові роб.\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('RGRs')}>\n                РГР\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('DKRs')}>\n                ДКР\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('essays')}>\n                Реферати\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('budgetGroups')}>\n                Академ бюдж\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                onClick={() => this.onSort('practiceSubGroups')}\n              >\n                Підгр. для ПЗ\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('labSubGroups')}>\n                Підгр. для лаб\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('bStudents')}>\n                Б\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('kStudents')}>\n                К\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('bkStudents')}>\n                БК\n              </Table.HeaderCell>\n              <Table.HeaderCell onClick={() => this.onSort('kkStudents')}>\n                КК\n              </Table.HeaderCell>\n              <Table.HeaderCell>Лекц.</Table.HeaderCell>\n              <Table.HeaderCell>Практ.</Table.HeaderCell>\n              <Table.HeaderCell>Лаб.</Table.HeaderCell>\n              <Table.HeaderCell>Екз.</Table.HeaderCell>\n              <Table.HeaderCell>Зал.</Table.HeaderCell>\n              <Table.HeaderCell>Контр.Р</Table.HeaderCell>\n              <Table.HeaderCell>КП</Table.HeaderCell>\n              <Table.HeaderCell>Курс.р</Table.HeaderCell>\n              <Table.HeaderCell>РГР</Table.HeaderCell>\n              <Table.HeaderCell>ДКР</Table.HeaderCell>\n              <Table.HeaderCell>Реф</Table.HeaderCell>\n              <Table.HeaderCell>Конс</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {this.state.data.map((row, i) => (\n              <K3TableRow {...row} num={i + 1} key={i} />\n            ))}\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default K3Table;\n","import React, { Component } from 'react';\nimport K3Table from './containers/K3Table';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <K3Table />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport XlsxPopulate from 'xlsx-populate/browser/xlsx-populate';\n\nimport 'normalize.css';\nimport 'sanitize.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport './scss/index.css';\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n// window.test = () => {\n//   Promise.all([\n//     XlsxPopulate.fromFileAsync('/k3_template.xlsx'),\n//     XlsxPopulate.fromFileAsync('/test.xlsx')\n//   ])\n//     .then(workbooks => {\n//       const workbook = workbooks[0];\n//       const workbook2 = workbooks[1];\n//       const sheets2 = workbook2.sheets();\n//\n//       sheets2.forEach(sheet => {\n//         const newSheet = workbook.addSheet(sheet.name());\n//         const usedRange = sheet.usedRange();\n//         const oldValues = usedRange.value();\n//\n//         newSheet.range(usedRange.address()).value(oldValues);\n//       });\n//\n//       return workbook.toFileAsync('./src/data/xlsx-populate/spreadsheet2.xlsx');\n//     });\n// };\n"],"sourceRoot":""}